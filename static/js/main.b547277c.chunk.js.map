{"version":3,"sources":["helpers/functions.js","img/content/iron_man_body.jpg","img/avatar/avatar_iron.jpg","img/avatar/groot.png","img/content/groot_body.jpg","store/reducers/reducer.js","store/store.js","components/FormForPost/PostForm.js","store/actions/actions.js","components/Post/Post.js","components/PostsPage.js","App.js","index.js"],"names":["createIdGenerator","getRandomNumber","min","max","Math","floor","random","start","result","starId","initialState","posts","id","next","value","name","nickname","avatar","avatarIron","content","imageContent","postIron","date","Date","toLocaleDateString","likes","comments","share","isliked","isShared","isComment","avatarGroot","postGroot","actionTypes","store","createStore","state","action","type","whosPost","document","getElementById","payload","liked","querySelector","updateLike","newArrayPost","classList","toggle","forEach","post","push","updateComments","updateShare","newPost","newPostAdd","mapDispatchToProps","addPost","connect","console","log","props","useState","setContent","linkImg","setLinkImg","postAuthor","setPostAuthor","checkField","setCheckField","authors","map","unAuthor","Array","from","Set","sendPost","e","preventDefault","useEffect","className","noValidate","onChange","target","contentHandler","placeholder","linkImgHandler","postAuthorHandler","disabled","author","onClick","leaveComments","shared","verifiedAccount","alt","src","PostsPage","postsData","this","Component","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.b547277c.chunk.js","sourcesContent":["const getRandomNumber = (min = 1, max = 100) => Math.floor(Math.random() * (max - min) + min);\n\nfunction* createIdGenerator(start) {\n  let result = start;\n  while (true) yield result++;\n};\n\n\nexport { getRandomNumber, createIdGenerator }","export default __webpack_public_path__ + \"static/media/iron_man_body.61f89ae4.jpg\";","export default __webpack_public_path__ + \"static/media/avatar_iron.c27f03d1.jpg\";","export default __webpack_public_path__ + \"static/media/groot.94297dd0.png\";","export default __webpack_public_path__ + \"static/media/groot_body.bf82b906.jpg\";","import { getRandomNumber, createIdGenerator } from '../../helpers/functions';\n\nimport postIron from '../../img/content/iron_man_body.jpg';\nimport avatarIron from '../../img/avatar/avatar_iron.jpg';\nimport avatarGroot from '../../img/avatar/groot.png';\nimport postGroot from '../../img/content/groot_body.jpg';\n\nconst starId = createIdGenerator(1);\n\nconst initialState = {\n  posts: [\n    {\n      id: starId.next().value,\n\n      name: 'Tony Stark',\n      nickname: '@ironManBest',\n      avatar: avatarIron,\n\n      content: \"Give me a scotch. I'm starving.\",\n      imageContent: postIron,\n      date: new Date().toLocaleDateString(),\n      likes: getRandomNumber(10, 9000),\n      comments: getRandomNumber(5, 5000),\n      share: getRandomNumber(20, 6000),\n      isliked: false,\n      isShared: false,\n      isComment: false\n    },\n\n    {\n      id: starId.next().value,\n\n      name: 'Groot',\n      nickname: '@i_am_groot',\n      avatar: avatarGroot,\n\n      content: \"I am Groot\",\n      imageContent: postGroot,\n      date: new Date().toLocaleDateString(),\n      likes: getRandomNumber(10, 9000),\n      comments: getRandomNumber(5, 5000),\n      share: getRandomNumber(20, 6000),\n      isliked: false,\n      isShared: false,\n      isComment: false\n    }\n  ],\n};\n\nexport const actionTypes = {\n  addPost: 'ADD_POST',\n  liked: 'ADD_lIKE',\n  commented: 'LEAVE_COMMENT',\n  share: 'TO_SHARE'\n}\n\nexport function rootReducer(state = initialState, action) {\n  switch (action.type) {\n    case actionTypes.liked: {\n      const whosPost = document.getElementById(action.payload.id);\n      const liked = whosPost.querySelector(\".post__footer--likes\");\n      const updateLike = state.posts;\n      const newArrayPost = [];\n\n      liked.classList.toggle(\"unlike\");\n      liked.classList.toggle(\"liked\");\n      updateLike.forEach(post => {\n        if (post.id === action.payload.id) {\n          (!post.isliked) ? post.likes++ : post.likes--;\n          post.isliked = !post.isliked;\n          newArrayPost.push(post)\n        } else\n          newArrayPost.push(post)\n      })\n      return {\n        ...state,\n        posts: newArrayPost,\n      }\n    };\n    case actionTypes.commented: {\n      const newArrayPost = [];\n      const updateComments = state.posts;\n      updateComments.forEach(post => {\n        if (post.id === action.payload.id) {\n          (!post.isComment) ? post.comments++ : post.comments--;\n          post.isComment = !post.isComment;\n          newArrayPost.push(post)\n        } else\n          newArrayPost.push(post)\n      })\n      return {\n        ...state,\n        posts: newArrayPost,\n      }\n    };\n    case actionTypes.share: {\n      const newArrayPost = [];\n      const updateShare = state.posts;\n      updateShare.forEach(post => {\n        if (post.id === action.payload.id) {\n          (!post.isShared) ? post.share++ : post.share--;\n          post.isShared = !post.isShared;\n          newArrayPost.push(post)\n        } else\n          newArrayPost.push(post)\n      })\n      return {\n        ...state,\n        posts: newArrayPost,\n      }\n    };\n    case actionTypes.addPost: {\n      const { name, content, imageContent } = action.payload.newPost;\n      const newPostAdd = {\n        id: starId.next().value,\n        name: name,\n        nickname: name === 'Tony Stark' ? '@ironManBest' : '@i_am_groot',\n        avatar: name === 'Tony Stark' ? avatarIron : avatarGroot,\n        content: content,\n        imageContent: imageContent,\n        date: new Date().toLocaleDateString(),\n        likes: getRandomNumber(10, 9000),\n        comments: getRandomNumber(5, 5000),\n        share: getRandomNumber(20, 6000),\n        isliked: false,\n        isShared: false,\n        isComment: false\n      }\n\n      return {\n        ...state, posts: [...state.posts, newPostAdd]\n      }\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import { createStore } from 'redux';\n\nimport { rootReducer } from './reducers/reducer';\n\nconst store = createStore(rootReducer);\n\nexport default store;","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport { addPost } from '../../store/actions/actions';\n\nimport './post-form.sass';\n\nconst PostForm = (props) => {\n\n  const [content, setContent] = useState('');\n  const [linkImg, setLinkImg] = useState('');\n  const [postAuthor, setPostAuthor] = useState('');\n  const [checkField, setCheckField] = useState(true);\n\n  const contentHandler = (e) => setContent(e.target.value);\n  const linkImgHandler = (e) => setLinkImg(e.target.value);\n  const postAuthorHandler = (e) => setPostAuthor(e.target.value);\n  const authors = props.posts.map(post => (post.name));\n  const unAuthor = Array.from(new Set(authors));\n\n  const resetInput = () => {\n    setContent('');\n    setLinkImg('');\n    setPostAuthor('');\n  }\n\n  const sendPost = (e) => {\n    e.preventDefault();\n    if (!content || !linkImg) {\n      setCheckField(false);\n    } else {\n      const newPost = {\n        name: postAuthor,\n        imageContent: linkImg,\n        content: content\n      }\n      setCheckField(true);\n      props.addPost(newPost);\n      resetInput();\n    }\n  }\n\n  useEffect(() => {\n    setContent(content);\n    setLinkImg(linkImg);\n    setPostAuthor(postAuthor)\n  }, [content, linkImg, postAuthor])\n\n  return (\n    <div className='block-form'>\n      <h2 className='form-header'>Add Post</h2>\n      <form noValidate className='form'>\n        <input\n          className='form__input'\n          onChange={(e) => contentHandler(e)}\n          type='text'\n          value={content}\n          placeholder=\"What do you want to say?\"\n        />\n        <input\n          className='form__input'\n          onChange={(e) => linkImgHandler(e)}\n          type='text'\n          value={linkImg}\n          placeholder=\"Enter link for image\"\n        />\n\n        <select\n          onChange={(e) => postAuthorHandler(e)}\n          className='form__input'>\n          <option value=\"none\" disabled>\n            Choose author\n        </option>\n          {unAuthor.map(author => <option value={author}>{author}</option>)}\n        </select>\n\n        <input\n          type='submit'\n          value='Make post'\n          className={`form__input form__input--btn`}\n          onClick={(e) => sendPost(e)}\n        />\n      </form>\n      {!checkField &&\n        <p className='form__warning'>Fill all fields</p>\n      }\n    </div>\n  )\n}\n\nconst mapStateToProps = (store) => {\n  console.log(store)\n  return {\n    posts: store.posts,\n  }\n}\n\nconst mapDispatchToProps = {\n  addPost,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostForm);","import { actionTypes } from '../reducers/reducer';\n\nexport const addPost = (newPost) => ({\n    type: actionTypes.addPost,\n    payload: { newPost },\n});\n\nexport const liked = (id) => ({\n    type: actionTypes.liked,\n    payload: { id }\n\n});\n\nexport const leaveComments = (id) => ({\n    type: actionTypes.commented,\n    payload: { id }\n});\n\nexport const shared = (id) => ({\n    type: actionTypes.share,\n    payload: { id }\n});","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { liked, leaveComments, shared } from '../../store/actions/actions';\n\nimport './post.sass';\n\nconst Post = ({ id, name, avatar, verifiedAccount, nickname, date, content, imageContent, comments, likes, share, liked, leaveComments, shared }) => {\n    const updateLike = () => liked(id);\n    const updateComments = () => leaveComments(id);\n    const updateShare = () => shared(id);\n\n    return (\n        <div className=\"post\" id={id}>\n            <div className=\"post__heading\">\n                <div><img alt={name} src={avatar} className=\"post__heading--photo\" />\n                </div>\n                <div className=\"post__heading--info\">\n                    <div className=\"post__heading--personal-info\">\n                        <p className={\n                            verifiedAccount ? \"post__heading--personal-info-check\" : \"\"\n                        }>{name}</p>\n                        <p className=\"nickname\">{nickname}</p>\n                        <p className=\"date\">{date}</p>\n                    </div>\n                    <div className=\"post__heading--content\">\n                        <p>{content}</p>\n                    </div>\n                </div>\n            </div>\n            <div className=\"post__body\">\n                <img src={imageContent} alt=\"Post\" className=\"post__body--content\" />\n            </div>\n            <div className=\"post__footer\">\n                <p className=\"post__footer--comments post-action\" onClick={updateComments}>{comments}</p>\n                <p className=\"post__footer--likes unlike post-action\" onClick={updateLike}>{likes}</p>\n                <p className=\"post__footer--share post-action\" onClick={updateShare}>{share}</p>\n                <p className=\"post__footer--cloud post-action\"></p>\n            </div>\n        </div>\n    )\n}\n\nconst mapDispatchToProps = {\n    liked,\n    leaveComments,\n    shared,\n}\n\nexport default connect(null, mapDispatchToProps)(Post);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Post from './Post/Post';\nclass PostsPage extends Component {\n\n  render() {\n    const postsData = this.props.posts;\n    return (\n      <>\n        <div className='posts--all'>\n          {postsData.map(post => <Post {...post} />)}\n        </div>\n      </>\n    );\n  }\n}\nconst mapStateToProps = (store) => {\n  return {\n    posts: store.posts,\n  }\n}\nexport default connect(mapStateToProps)(PostsPage);\n","import React, { Component } from 'react';\n\nimport PostForm from './components/FormForPost/PostForm';\nimport PostsPage from './components/PostsPage';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className='wrapper'>\n        <PostsPage />\n        <PostForm />\n      </div>\n    );\n  }\n}\n\nexport default (App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport store from './store/store';\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}